server.port=8081

spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

# JSP수정시 서버 재시작없이 바로 적용될 수 있게 설정
# server.servlet.jsp.init-parameters.development=true

# Live Reload 기능 활성화
spring.devtools.livereload.enabled=true
spring.devtools.restart.enabled=true

# oracle
spring.datasource.driver-class-name=oracle.jdbc.driver.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@222.111.193.60:1521:xe
spring.datasource.username=shop
spring.datasource.password=1234
spring.sql.init.encoding=UTF-8

# Entity 설정이 바뀌면 테이블을 업데이트 하라는 뜻, 개발이 끝나면 아래 줄을 삭제하거나 none으로 변경한다.
# create = 실행될때마다 새로만들어짐
# update = 실행될때마다 다시 업로드됨 oracle에서 건드려도 이해를함
# none = 아무것도 하지 않는다.
# create-drop = 테스트 환경에 적합, 테스트 실행시 mock Data를 위해 table을 생성하고 테스트 종료 후, 테이블 drop
# validate = application 실행시 @Entity들과 이미 존재하는 테이블(schema)가 정상적으로 맵핑되었는지 판단하여 만약 @Entity와 테이블이 제대로 맵핑 되지 않으면 application이 실행되지 않는다. 
spring.jpa.hibernate.ddl-auto=none

# spring.jpa.hibernate.ddl-auto 옵션을 사용할 것인지를 결정하는 프로퍼티입니다.
# 기본적으로 false로 되어있기 때문에 JPA에 의한 데이터베이스 자동 초기화 가능을 사용하려면 true로 세팅해야합니다.
spring.jpa.generate-ddl=false

# JPA가 생성한 SQL문을 보여줄 지에 대한 여부를 알려주는 프로퍼티입니다.
spring.jpa.show-sql=true

# 사용하는 데이터베이스를 지정한다.
spring.jpa.database=oracle

# Spring Data JPA는 기본적으로 Hibernate라는 JPA 구현체를 사용한다.
# Hibernate는 내부적으로 지정되는 DB에 맞게 SQL 문을 생성하는 Dialect가 존재한다.
# Dialect는 Hibernate가 다양한 데이터베이스를 처리하기 위해 각 테이터베이스에 맞는 (각기 다른) SQL 문법을 처리하기 위해 존재한다.
# MySQL5Dialect, MySQL5InnoDBDialect, Oracle10gDialect, OracleDialect 등 다양한 Dialect가 있다.
# MySQL의 경우 데이터베이스의 엔진을 MyISAM과 InnoDB로 구분한다.
# MyISAM은 예전 MySQL부터 사용되던 엔진으로 속도면에서는 좀 더 나을 수 있지만, 데이터 불결성을 제대로 체크하지 않기 때문에 최근에는 기본적으로 innoDB를 권장한다.
# spring.jpa.database-platform을 명시적으로 지정하지 않으면 MyISAM으로 지정되고, 이럴 경우 외래키 대신에 인덱스가 생성되므로 주의해야 한다.
spring.jpa.database-platform=org.hibernate.dialect.Oracle10gDialect

# spring boot에서는 view templat으로 (FreeMarker, Groovy, Thymeleaf, Mustache)을 지원하고 있습니다.
# 이중 spring에서는 Thymeleaf를 적극적으로 지원하고 있고 해당 템플릿의 경우 커스텀 유연성이 높아 많은 사용자가 사용하고 있습니다.
# Groovy나 Mustache의 경우 사용 속도, 사용방법, 커뮤니티 활성화 등 다른 2개의 템플릿보다 떨어지는 부분이 많아 spring boot에서 view template을 사용한다면 freemarker 나 Thymeleaf를 사용하는게 좋습니다.
# Spring Property Setting
# 기본은 true(false로 설정하는 경우 프리마커 변경 내용이 바로 적용된다)
# spring.freemarker.cache=false